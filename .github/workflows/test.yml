name: "Tests: E2E"
on:
  workflow_dispatch:
     inputs:
      notify:
        description: Post the results to webex
        required: true
        default: true
        type: boolean
      retry:
        description: Rerun required for failed test cases in the first try
        required: true
        default: true
        type: boolean
      environment:
        description: Test Application Environment
        required: true
        default: ci
        type: string
      github:
        description: Use github reporter
        default: false
        type: boolean
      project:
        description: playwright project
        type: choice
        options:
          - chrome
          - firefox
          - all
  push:
    branches: 
      - dev
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
env:
  GITHUB_PR_NUMBER: ${{github.event.pull_request.number}}
  GITHUB_REPORTER : ${{inputs.github}}
  CI_RUN_ID: "${{github.ref_name}}/${{github.run_number}}"
  projects: fromJson('["chromium", "firefox"]')
jobs:
  setMatrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: echo "matrix={\"project\":[\"chromium\",\"firefox\"]}" >> $GITHUB_OUTPUT
  e2erun:
    name: Run end-to-end tests (${{ matrix.project }})
    needs: setMatrix
    strategy:
      matrix: ${{ fromJSON(needs.setMatrix.outputs.matrix) }}
      max-parallel: 1
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.35.0-jammy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        shell: bash
        run: |
          command=("test" "--project=${{ matrix.project }}")
          retry=${{inputs.retry}}
          if [ "$retry" = true ] ; then
            command+=("--retries=2")
          fi
          echo $retry
          echo "${command[@]}"
          echo "GITHUB_REF_NAME=$GITHUB_REF_NAME GITHUB_RUN_NUMBER=$GITHUB_RUN_NUMBER GITHUB_RUN_ID=$GITHUB_RUN_ID"
          echo $CI_RUN_ID
          HOME=/root npx playwright "${command[@]}"
      - name: Test Summary
        id: test_summary
        uses: test-summary/action@v2
        with:
          paths: "playwright-report/xunit.xml"
        if: always()
      - name: HTML Preview
        id: html_preview
        uses: pavi2410/html-preview-action@v2
        with:
          html_file: 'playwright-report/index.html'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: report-${{ matrix.project }}
          path: |
            playwright-report/**/*
            artifacts/**/**
      - name: Post Notification
        run: |
          message="#### This is a test message"
          totalCount=${{steps.test_summary.outputs.total}}
          failCount=${{steps.test_summary.outputs.failed}}
          skipCount=${{steps.test_summary.outputs.skipped}}
          passCount=${{steps.test_summary.outputs.passed}}
          html_report=${{steps.html_preview.outputs.url}}
          echo $html_report
          WORKFLOW_URL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo $WORKFLOW_URL
          
          className="info"
  
          if [ $failCount != '0' ]; then
            className="danger"
          elif [ $passCount == $totalCount ]; then
            className="success"
          fi
          
          msg="<blockquote class='$className'><h2>PIAM E2E Regression - Cross Browser Tests </h2><hr><b>Test Status : &#10060; FAILED </b><br/> \
          <b><a href='http://144.254.67.217:3000/d/05jLPAy4k/piam-e2e-integration-tests?orgId=1&var-RunID&from=now-7d&to=now'>Grafana Dashboard</a></b><br/> \
          <b><a href='$WORKFLOW_URL'>Workflow Run</a></b> \
          <pre>| <b>Test Summary</b>  |  Total : ${totalCount}  |  Failures: ${failCount}  |  Skipped: ${skipCount}  | Passed: ${passCount}  |</pre>"
          echo "$msg"
          # curl -X POST --data-raw "{\"markdown\": \"$message\"}" -H "Content-Type:application/json" \
          # https://webexapis.com/v1/webhooks/incoming/Y2lzY29zcGFyazovL3VzL1dFQkhPT0svNTIyMmE3NDEtNTI0Zi00ODM0LWJmMWMtYjg5NTQzMWE1NTNi
        if: inputs.notify
  merge-and-upload:
    name: 'Merge and Upload'
    runs-on: ubuntu-latest
    needs: ['e2erun']
    steps:
      - name: Download all reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v3
      - name: Test Summary
        id: test_summary
        uses: test-summary/action@v2
        with:
          paths: './**/playwright-report/xunit.xml'
      - name: 'Output'
        run: |
          totalCount=${{ steps.test_summary.outputs.total }}
          failCount=${{ steps.test_summary.outputs.failed }}
          skipCount=${{ steps.test_summary.outputs.skipped }}
          passCount=${{ steps.test_summary.outputs.passed }}
          echo $totalCount
          echo $failCount
          echo $skipCount
          echo $passCount
